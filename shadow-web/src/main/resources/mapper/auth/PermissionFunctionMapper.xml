<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shadow.web.mapper.auth.PermissionFunctionMapper" >
  <resultMap id="BaseResultMap" type="com.shadow.web.model.auth.PermissionFunction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="function_id" property="functionId" jdbcType="INTEGER" />
    <result column="permission_id" property="permissionId" jdbcType="INTEGER" />
    <result column="is_all" property="isAll" jdbcType="INTEGER" />
    <result column="is_create" property="isCreate" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="is_update" property="isUpdate" jdbcType="INTEGER" />
    <result column="is_retrieve" property="isRetrieve" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, function_id, permission_id, is_all, is_create, is_delete, is_update, is_retrieve, 
    create_time, update_time, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shadow.web.model.auth.PermissionFunctionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cm_permission_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cm_permission_function
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cm_permission_function
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shadow.web.model.auth.PermissionFunctionExample" >
    delete from cm_permission_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shadow.web.model.auth.PermissionFunction" >
    insert into cm_permission_function (id, function_id, permission_id, 
      is_all, is_create, is_delete, 
      is_update, is_retrieve, create_time, 
      update_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{functionId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}, 
      #{isAll,jdbcType=INTEGER}, #{isCreate,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{isUpdate,jdbcType=INTEGER}, #{isRetrieve,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shadow.web.model.auth.PermissionFunction" >
    insert into cm_permission_function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="functionId != null" >
        function_id,
      </if>
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="isAll != null" >
        is_all,
      </if>
      <if test="isCreate != null" >
        is_create,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="isUpdate != null" >
        is_update,
      </if>
      <if test="isRetrieve != null" >
        is_retrieve,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="isAll != null" >
        #{isAll,jdbcType=INTEGER},
      </if>
      <if test="isCreate != null" >
        #{isCreate,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isUpdate != null" >
        #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="isRetrieve != null" >
        #{isRetrieve,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shadow.web.model.auth.PermissionFunctionExample" resultType="java.lang.Integer" >
    select count(*) from cm_permission_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cm_permission_function
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.functionId != null" >
        function_id = #{record.functionId,jdbcType=INTEGER},
      </if>
      <if test="record.permissionId != null" >
        permission_id = #{record.permissionId,jdbcType=INTEGER},
      </if>
      <if test="record.isAll != null" >
        is_all = #{record.isAll,jdbcType=INTEGER},
      </if>
      <if test="record.isCreate != null" >
        is_create = #{record.isCreate,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.isUpdate != null" >
        is_update = #{record.isUpdate,jdbcType=INTEGER},
      </if>
      <if test="record.isRetrieve != null" >
        is_retrieve = #{record.isRetrieve,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cm_permission_function
    set id = #{record.id,jdbcType=INTEGER},
      function_id = #{record.functionId,jdbcType=INTEGER},
      permission_id = #{record.permissionId,jdbcType=INTEGER},
      is_all = #{record.isAll,jdbcType=INTEGER},
      is_create = #{record.isCreate,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      is_update = #{record.isUpdate,jdbcType=INTEGER},
      is_retrieve = #{record.isRetrieve,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadow.web.model.auth.PermissionFunction" >
    update cm_permission_function
    <set >
      <if test="functionId != null" >
        function_id = #{functionId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null" >
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="isAll != null" >
        is_all = #{isAll,jdbcType=INTEGER},
      </if>
      <if test="isCreate != null" >
        is_create = #{isCreate,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isUpdate != null" >
        is_update = #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="isRetrieve != null" >
        is_retrieve = #{isRetrieve,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadow.web.model.auth.PermissionFunction" >
    update cm_permission_function
    set function_id = #{functionId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=INTEGER},
      is_all = #{isAll,jdbcType=INTEGER},
      is_create = #{isCreate,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      is_update = #{isUpdate,jdbcType=INTEGER},
      is_retrieve = #{isRetrieve,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>